# Web specific
GET         /                                  controllers.musicpimp.LibraryController.siteRoot
GET         /player                            controllers.musicpimp.Website.player
GET         /player/recent                     controllers.musicpimp.Website.recent
GET         /player/popular                    controllers.musicpimp.Website.popular
GET         /settings                          controllers.musicpimp.SettingsController.settings
GET         /connect                           controllers.musicpimp.ConnectController.connect
GET         /image                             controllers.musicpimp.ConnectController.image
GET         /logs                              controllers.musicpimp.LogPage.logs
POST        /logs                              controllers.musicpimp.LogPage.frontendLog
POST        /logs/levels                       controllers.musicpimp.LogPage.changeLogLevel
GET         /cloud                             controllers.musicpimp.Cloud.cloud
POST        /cloud                             controllers.musicpimp.Cloud.toggle
GET         /about                             controllers.musicpimp.Website.about
GET         /manage                            controllers.musicpimp.SettingsController.manage
GET         /manage/push/tokens                controllers.musicpimp.SettingsController.tokens
GET         /account                           controllers.musicpimp.Accounts.account
GET         /users                             controllers.musicpimp.Accounts.users
POST        /users/delete/*id                  controllers.musicpimp.Accounts.delete(id: Username)
GET         /login                             controllers.musicpimp.Accounts.loginPage
GET         /logout                            controllers.musicpimp.Accounts.logout
POST        /authenticate                      controllers.musicpimp.Accounts.formAuthenticate
POST        /changePassword                    controllers.musicpimp.Accounts.formChangePassword
POST        /addUser                           controllers.musicpimp.Accounts.formAddUser
# Player
GET         /playback                          controllers.musicpimp.Rest.status
POST        /playback                          controllers.musicpimp.Rest.playback
POST        /playback/uploads                  controllers.musicpimp.Rest.playUploadedFile
POST        /playback/stream                   controllers.musicpimp.Rest.stream
POST        /playback/server                   controllers.musicpimp.Rest.streamedPlayback
POST        /playlist                          controllers.musicpimp.Rest.playlist
POST        /playlist/uploads                  controllers.musicpimp.Rest.addUpload
# Library
GET         /folders                           controllers.musicpimp.LibraryController.rootLibrary
GET         /folders/*folder                   controllers.musicpimp.LibraryController.library(folder: FolderID)
GET         /downloads/*id                     controllers.musicpimp.LibraryController.download(id: TrackID)
GET         /tracks/folders                    controllers.musicpimp.LibraryController.allTracks
GET         /tracks/folders/*id                controllers.musicpimp.LibraryController.tracksIn(id: FolderID)
GET         /tracks/meta/*id                   controllers.musicpimp.LibraryController.meta(id: TrackID)
GET         /tracks/*id                        controllers.musicpimp.LibraryController.supplyForPlayback(id: TrackID)
GET         /playlists                         controllers.musicpimp.Playlists.playlists
POST        /playlists                         controllers.musicpimp.Playlists.savePlaylist
GET         /playlists/*playlist               controllers.musicpimp.Playlists.playlist(playlist: PlaylistID)
POST        /playlists/delete/*playlist        controllers.musicpimp.Playlists.deletePlaylist(playlist: PlaylistID)
POST        /playlists/edit                    controllers.musicpimp.Playlists.edit
POST        /playlists/handle                  controllers.musicpimp.Playlists.handleSubmission
POST        /rootfolders                       controllers.musicpimp.SettingsController.newFolder
POST        /rootfolders/delete/*id            controllers.musicpimp.SettingsController.deleteFolder(id)
GET         /tracks                            controllers.musicpimp.Alarms.tracks
GET         /pathsOnly                         controllers.musicpimp.Alarms.paths
GET         /search                            controllers.musicpimp.SearchPage.search
GET         /search/ws                         controllers.musicpimp.Search.openSocket
POST        /search/refresh                    controllers.musicpimp.SearchPage.refresh
# WebSockets
GET         /ws/playback                       controllers.musicpimp.ServerWS.openSocket
GET         /ws/playback2                      controllers.musicpimp.ServerWS.openSocket
GET         /ws/logs                           controllers.musicpimp.PimpLogs.openSocket
GET         /ws/cloud                          controllers.musicpimp.CloudWS.openSocket
# Alarms
GET         /alarms                            controllers.musicpimp.Alarms.alarms
POST        /alarms                            controllers.musicpimp.Alarms.handleJson
GET         /alarms/editor                     controllers.musicpimp.Alarms.newAlarm
GET         /alarms/editor/*id                 controllers.musicpimp.Alarms.editAlarm(id)
POST        /alarms/editor/add                 controllers.musicpimp.Alarms.newClock
# Miscellaneous
GET         /ping                              controllers.musicpimp.Rest.ping
GET         /pingauth                          controllers.musicpimp.Rest.pingAuth
# Maps static resources from the /public folder to the /assets URL path
GET         /assets/*file                      controllers.Assets.versioned(path = "/public", file: Asset)
